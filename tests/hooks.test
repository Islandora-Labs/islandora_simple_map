<?php

/**
 * @file
 * Hooks tests.
 */

/**
 * Class IslandoraSimpleMapHookTestCase.
 */
class IslandoraSimpleMapHookTestCase extends IslandoraSimpleMapTestCase {

  /**
   * Test objects to be removed after the test.
   *
   * @var array
   */
  protected $testObjects = array(
    'test:simpleMapDecimalObject',
    'test:simpleMapGeojson',
  );

  /**
   * Gets info to display to describe this test.
   *
   * @see IslandoraUnitTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Islandora Simple Map - Hooks',
      'description' => 'Ensure that the hooks for coordinate retrieval/parsing are called.',
      'group' => 'Islandora Simple Map',
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp();
    module_load_include('inc', 'islandora_simple_map', 'includes/utilities');
  }

  /**
   * Test hook_islandora_simple_map_get_coordinates().
   */
  public function testGetCoordinatesHook() {
    module_enable(array('islandora_simple_map_hooks_test'));
    $object = $this->admin->repository->constructObject('test:simpleMapDecimalObject');
    $this->admin->repository->ingestObject($object);
    $mods = $object->constructDatastream('MODS');
    $object->ingestDatastream($mods);

    $object['MODS']->content = file_get_contents("{$this->resourcePath}/mods_single_coordinate.xml");
    $object['MODS']->mimetype = 'application/xml';

    $coord = $object->constructDatastream('COORDS');
    $object->ingestDatastream($coord);
    $object['COORDS']->content = file_get_contents("{$this->resourcePath}/coords_ds_data.txt");
    $object['COORDS']->mimetype = 'text/plain';

    $expected = array('49.8833260,-97.1529213',
      '45.4215, -75.6972',
      '43.6532, -79.3832',
      '45.5017, -73.5673',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Hook get coordinates did not return expected results.");
  }

  /**
   * Test hook_islandora_simple_map_get_geojson().
   */
  public function testGetGeojsonHook() {
    module_enable(array('islandora_simple_map_hooks_test'));
    $object = $this->admin->repository->constructObject('test:simpleMapGeojson');

    $expected = array(
      'type' => 'FeatureCollection',
      'features' => array(
        'type' => 'Feature',
        'geometry' => array(
          'type' => 'Point',
          'coordinates' => array(
            -63.1245071,
            46.2350236,
          ),
        ),
      ),
    );

    $geojson = islandora_simple_map_get_geojson($object);
    $this->assertEqual($expected, $geojson, "Hook get geojson did not return expected results.");
  }

  /**
   * Test hook_islandora_simple_map_parse_coordinates().
   */
  public function testParseCoordinates() {
    $coordinates = array(
      '45.4215, -75.6972',
    );

    $expected = array(
      '45.4215, -75.6972',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parse coordinates returned expected decimal result.');

    $coordinates = array(
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $expected = array(
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parsed coordinates returned expected DMS result.');

    $coordinates = array(
      'Kanaka Creek, BC',
    );

    $expected = array(
      'Kanaka Creek, BC',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parsed coordinates returned expected text result.');

    $coordinates = array(
      '45.4215, -75.6972',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $expected = array(
      '45.4215, -75.6972',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parsed coordinates returned expected decimal and DMS results.');

    $coordinates = array(
      '45.4215, -75.6972',
      'Kanaka Creek, BC',
    );

    $expected = array(
      '45.4215, -75.6972',
      'Kanaka Creek, BC',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parsed coordinates returned expected decimal and text results.');

    module_enable(array('islandora_simple_map_hooks_test'));
    $coordinates = array(
      '45.4215, -75.6972',
    );

    $expected = array(
      '45.4215, -75.6972',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parse coordinates returned expected results.');

    $coordinates = array(
      '45.4215, -75.6972',
      '43.6532, -79.3832',
      '45.5017, -73.5673',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $expected = array(
      '45.4215, -75.6972',
      '43.6532, -79.3832',
      '45.5017, -73.5673',
      '32.715736, -117.161087',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parse coordinates returned expected results.');

    $coordinates = array(
      '45.4215, -75.6972',
      '43.6532, -79.3832',
      'Kanaka Creek, BC',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );

    $expected = array(
      '45.4215, -75.6972',
      '43.6532, -79.3832',
      'Kanaka Creek, BC',
      '32.715736, -117.161087',
    );

    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertArrayEquals($expected, $new_coords, 'Hook parse coordinates returned expected results.');
  }

  /**
   * Ensure hooks are executed according to the weight argument.
   */
  public function testParseCoordinatesOrdering() {
    module_enable(array('islandora_simple_map_hooks_order_test_1', 'islandora_simple_map_hooks_order_test_2'));
    $coordinates = array(
      'TEST, -75.6972',
      '43.6532, -79.3832',
      '45.5017, TEST',
      '32° 42\' 56.6496" N, 117° 9\' 39.9132" W',
    );
    $expected = array(
      '43.6532, -79.3832',
      'WINNING, -75.6972',
      '45.5017, WINNING',
      'DSM, DSM',
    );
    $new_coords = islandora_simple_map_parse_coordinates($coordinates);
    $this->assertEqual($expected, $new_coords, 'Executes hooks in weight order');
  }
}
