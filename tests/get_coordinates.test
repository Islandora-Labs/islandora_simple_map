<?php

/**
 * @file
 * Hook tests.
 */

/**
 * Get coordinates tests.
 */
class IslandoraSimpleMapGetCoordinatesTestCase extends IslandoraWebTestCase {

  /**
   * Location of test resources.
   *
   * @var string
   */
  private $resourcePath;

  /**
   * Existing Use Google Maps Javascript API setting.
   *
   * @var bool
   */
  private $jsApiState;

  /**
   * Gets info to display to describe this test.
   *
   * @see IslandoraUnitTestCase::getInfo()
   */
  public static function getInfo() {
    return [
      'name' => 'Islandora Simple Map - Hooks',
      'description' => 'Ensure that the hooks for coordinate retrieval are called.',
      'group' => 'Islandora Simple Map',
    ];
  }

  /**
   * Setup tests.
   *
   * @see \IslandoraUnitTestCase::setUp()
   */
  public function setUp() {
    parent::setUp('islandora_simple_map');
    $this->repository = $this->admin->repository;
    module_load_include('inc', 'islandora_simple_map', 'includes/utilities');
    $this->jsApiState = variable_get('islandora_simple_map_use_gmaps_api', FALSE);
    $this->resourcePath = dirname(__FILE__) . "/resources";
    $this->purgeTestObjects();
  }

  /**
   * Free any objects/resources created for this test.
   *
   * @see IslandoraUnitTestCase::tearDown()
   */
  public function tearDown() {
    $this->purgeTestObjects();
    variable_set('islandora_simple_map_use_gmaps_api', $this->jsApiState);
    unset($this->repository);
    parent::tearDown();
  }

  /**
   * Purge any objects created by the test's in this class.
   */
  public function purgeTestObjects() {
    $objects = array(
      'test:simpleMapSingleCoord',
      'test:simpleMapMultipleInSingle',
      'test:simpleMapMultipleInMulti',
      'test:simpleMapSFUData',
    );
    foreach ($objects as $object) {
      try {
        $object = $this->repository->getObject($object);
        $object->label = "Don't Block";
        $this->repository->purgeObject($object->id);
      }
      catch (Exception $e) {
        // Meh... Either it didn't exist or the purge failed.
      }
    }
  }

  /**
   * Test pulling a single coordinate from a MODS.
   */
  public function testSingleCoord() {
    $expected = ['49.8833260,-97.1529213'];
    $object = $this->repository->constructObject('test:simpleMapSingleCoord');
    $this->repository->ingestObject($object);
    $mods = $object->constructDatastream('MODS');
    $object->ingestDatastream($mods);

    $object['MODS']->content = file_get_contents("{$this->resourcePath}/mods_single_coordinate.xml");
    $object['MODS']->mimetype = 'application/xml';

    $this->setJavascriptApi(FALSE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong coordinates from single element with Embed API.");
    $this->setJavascriptApi(TRUE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong coordinates from single element with Javascript API.");

  }

  /**
   * Test pulling multiple coordinates and split on delimiter.
   */
  public function testMultipleCoordsInSingleElement() {
    $old_delimiter = variable_get('islandora_simple_map_coordinate_delimiter', ';');
    variable_set('islandora_simple_map_coordinate_delimiter', ';');

    $expected = ['+51.585,-124.71722', '+51.52333,-124.97861'];

    $object = $this->repository->constructObject('test:simpleMapMultipleInSingle');
    $this->repository->ingestObject($object);
    $mods = $object->constructDatastream('MODS');
    $object->ingestDatastream($mods);

    $object['MODS']->content = file_get_contents("{$this->resourcePath}/mods_multiple_coordinates_single_element.xml");
    $object['MODS']->mimetype = 'application/xml';

    $this->setJavascriptApi(FALSE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong results multiple coordinates splitting on ; with Embed API");
    $this->setJavascriptApi(TRUE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong results multiple coordinates splitting on ; with Javascript API");
    variable_set('islandora_simple_map_coordinate_delimiter', $old_delimiter);
  }

  /**
   * Test pulling multiple coordinates from multiple elements.
   */
  public function testMultipleCoordsInMultipleElements() {
    $expected = ['+51.585,-124.71722', '+51.52333,-124.97861'];

    $object = $this->repository->constructObject('test:simpleMapMultipleInMulti');
    $this->repository->ingestObject($object);
    $mods = $object->constructDatastream('MODS');
    $object->ingestDatastream($mods);

    $object['MODS']->content = file_get_contents("{$this->resourcePath}/mods_multiple_coordinates_separate_elements.xml");
    $object['MODS']->mimetype = 'application/xml';

    $this->setJavascriptApi(FALSE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong coordinates pulling from multiple elements with Embed API.");
    $this->setJavascriptApi(TRUE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual($expected, $coords, "Got wrong coordinates pulling from multiple elements with Javascript API.");
  }

  /**
   * Test pulling from SFU example data.
   */
  public function testSfuData() {
    $object = $this->repository->constructObject('test:simpleMapSFUData');
    $this->repository->ingestObject($object);
    $mods = $object->constructDatastream('MODS');
    $object->ingestDatastream($mods);

    $object['MODS']->content = file_get_contents("{$this->resourcePath}/mods_sample_sfu_data.xml");
    $object['MODS']->mimetype = 'application/xml';

    $this->setJavascriptApi(FALSE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual(['+49.28889,-123.17361', 'English Bay, BC'], $coords, "Got wrong coordinates from SFU sample data with Embed API.");
    $this->setJavascriptApi(TRUE);
    $coords = islandora_simple_map_get_coordinates($object);
    $this->assertEqual(['+49.28889,-123.17361'], $coords, "Got wrong coordinates from SFU sample data with Javascript API.");
  }

  /**
   * Enable/disable the javascript api setting for some tests.
   *
   * @param bool $val
   *   Value for the use javascript api variable.
   */
  private function setJavascriptApi($val = FALSE) {
    variable_set('islandora_simple_map_use_gmaps_api', $val);
  }

}
