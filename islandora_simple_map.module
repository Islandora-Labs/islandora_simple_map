<?php

/**
 * @file
 * The main Islandora Simple Map module file.
 */

define('ISLANDORA_SIMPLE_MAP_XPATHS', "//mods:subject/mods:cartographics/mods:coordinates\n//mods:subject/mods:geographic");
define('ISLANDORA_SIMPLE_MAP_COORDINATE_HOOK', 'islandora_simple_map_get_coordinates');
define('ISLANDORA_SIMPLE_MAP_PARSE_HOOK', 'islandora_simple_map_parse_coordinates_callback');

// Includes blocks.
require_once dirname(__FILE__) . '/includes/blocks.inc';

/**
 * Implements hook_menu().
 */
function islandora_simple_map_menu() {
  $items = array();
  $items['admin/islandora/tools/islandora_simple_map'] = array(
    'title' => 'Islandora Simple Map',
    'description' => 'Configure the Islandora Simple Map module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_simple_map_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin_form.inc',
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function islandora_simple_map_theme() {
  return array(
    'islandora_simple_map' => array(
      'variables' => array(
        'coords' => NULL,
        'iframe_width' => NULL,
        'iframe_height' => NULL,
        'zoom' => NULL,
        'collapsed' => NULL,
      ),
      'path' => drupal_get_path('module', 'islandora_simple_map') . '/theme',
      'template' => 'islandora_simple_map',
    ),
  );
}

/**
 * Implements hook_islandora_view_object_alter().
 */
function islandora_simple_map_islandora_view_object_alter(&$object, &$rendered) {
  module_load_include('inc', 'islandora_simple_map', 'includes/utilities');

  $found_coords = islandora_simple_map_process_coordinates($object);
  if (count($found_coords)) {
    $width = (int) variable_get('islandora_simple_map_iframe_width', '600');
    $height = (int) variable_get('islandora_simple_map_iframe_height', '600');
    $zoom = (int) variable_get('islandora_simple_map_zoom', '10');
    $collapsed = variable_get('islandora_simple_map_collapsed', 'collapsed');
    $module_path = drupal_get_path('module', 'islandora_simple_map');
    if (variable_get('islandora_simple_map_use_gmaps_api', FALSE)) {
      if (variable_get('islandora_simple_maps_disable_page_display', FALSE)) {
        return [];
      }
      $map_div_id = drupal_html_id('islandora_simple_map_page');
      $settings['islandora_simple_map'][$map_div_id] = [
        'map_markers' => $found_coords,
        'map_div_id' => $map_div_id,
        'map_zoom_level' => $zoom,
        'disable_scroll_zoom' => (bool) variable_get('islandora_simple_maps_disable_scroll', FALSE),
      ];
      $content = [
        'islandora_simple_map' => [
          '#type' => 'fieldset',
          '#title' => t('Map'),
          '#attributes' => [
            'class' => ['collapsible', ($collapsed ? 'collapsed' : '')],
          ],
          'islandora_simple_map_div' => [
            '#type' => 'container',
            '#attributes' => [
              'id' => $map_div_id,
              'class' => ['islandora-simple-map-holder', 'islandora-simple-map-page'],
            ],
          ],
          '#attached' => [
            'js' => [
              'misc/collapse.js',
              'misc/form.js',
              [
                'type' => 'setting',
                'data' => $settings,
              ],
              [
                'type' => 'file',
                'data' => "{$module_path}/js/object_map_markers.js",
              ],
              [
                'type' => 'external',
                'data' => url("https://maps.googleapis.com/maps/api/js", [
                  'query' => [
                    'key' => variable_get('islandora_simple_map_google_maps_api_key', ''),
                    'callback' => 'Drupal.islandora_simple_map.initialize',
                  ],
                ]),
                'defer' => TRUE,
              ],
            ],
            'css' => [
              [
                'type' => 'file',
                'data' => "{$module_path}/css/islandora_simple_map.css",
              ],
              [
                'type' => 'inline',
                'data' => "#{$map_div_id} {\nheight: {$height}px;\nwidth: {$width}px;\n}",
              ],
            ],
          ],
        ],
      ];
      $markup = render($content);
    }
    else {

      $width = variable_get('islandora_simple_map_iframe_width', '600');
      $height = variable_get('islandora_simple_map_iframe_height', '600');
      $zoom = variable_get('islandora_simple_map_zoom', '10');
      $collapsed = variable_get('islandora_simple_map_collapsed', 'collapsed');
      $markup = theme('islandora_simple_map', [
        // We use the first set of coords if our XPaths found more than one.
        'coords' => urlencode($found_coords[0]),
        'iframe_width' => $width,
        'iframe_height' => $height,
        'zoom' => $zoom,
        'collapsed' => $collapsed,
      ]);
    }
    // Some Islandora render arrays have a single member, with a key of NULL.
    if (isset($rendered[NULL])) {
      $rendered[NULL]['#markup'] = $rendered[NULL]['#markup'] . $markup;
    }
    else {
      // Others have several members, depending on the content model.
      $member = islandora_simple_map_get_rendered_member($object->models);
      if (isset($rendered[$member]['#markup'])) {
        $rendered[$member]['#markup'] = $rendered[$member]['#markup'] . $markup;
      }
    }

  }
}

/**
 * Determines which member of the object's render array to append map to.
 *
 * @param array $models
 *   The object's content models.
 *
 * @return string
 *   The key identifiying the member in the render array.
 */
function islandora_simple_map_get_rendered_member(array $models) {
  // Use the first content model. We don't need to worry about basic and
  // large images, PDFs, and several other content types. We only need to
  // identify content models that do not have a render array that uses a
  // NULL key for the markup.
  $model = $models[0];
  switch ($model) {
    case 'islandora:bookCModel':
      $member = 'islandora_book';
      break;

    case 'islandora:newspaperCModel':
      $member = 'islandora_newspaper';
      break;

    case 'islandora:collectionCModel':
      $member = 'collection_view';
      break;

    case 'ir:thesisCModel':
    case 'ir:citationCModel':
      $member = 'citation.tab';
      break;

    default:
      $member = '';
  }
  return $member;
}
