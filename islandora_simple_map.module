<?php

/**
 * @file
 * The main Islandora Simple Map module file.
 */

define('ISLANDORA_SIMPLE_MAP_XPATHS', "//mods:subject/mods:cartographics/mods:coordinates\n//mods:subject/mods:geographic");
define('ISLANDORA_SIMPLE_MAP_COORDINATE_HOOK', 'islandora_simple_map_get_coordinates');
define('ISLANDORA_SIMPLE_MAP_PARSE_HOOK', 'islandora_simple_map_parse_coordinates_callback');

// Includes blocks.
require_once dirname(__FILE__) . '/includes/blocks.inc';
// Include utilities.
require_once dirname(__FILE__) . '/includes/utilities.inc';

/**
 * Implements hook_menu().
 */
function islandora_simple_map_menu() {
  $items = array();
  $items['admin/islandora/tools/islandora_simple_map'] = array(
    'title' => 'Islandora Simple Map',
    'description' => 'Configure the Islandora Simple Map module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_simple_map_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin_form.inc',
  );
  $items['admin/islandora/tools/islandora_simple_map/settings'] = array(
    'title' => 'Settings',
    'description' => 'Configure the Islandora Simple Map module.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_simple_map_admin_settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/admin_form.inc',
    'weight' => -9,
  );
  $items['admin/islandora/tools/islandora_simple_map/collections'] = array(
    'title' => 'Collection Maps',
    'description' => 'Collections displaying a map of all member points',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_simple_map_admin_collection_display'),
    'access callback' => 'islandora_simple_map_collection_admin_access',
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/admin_form.inc',
  );
  $items['islandora/object/%islandora_object/maps'] = array(
    'title' => 'Collection Map',
    'description' => 'All points from the collection in one place.',
    'page callback' => 'islandora_simple_map_collection_map_view',
    'page arguments' => array(2),
    'access callback' => 'islandora_simple_map_collection_tab_access',
    'access arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
  );
  $items['islandora_simple_map/marker/%islandora_object'] = array(
    'title' => 'Map marker',
    'description' => 'Ajax call to get object information for the map marker',
    'page callback' => '_islandora_simple_map_marker_info',
    'page arguments' => array(2),
    'access callback' => 'islandora_object_access',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS, 2),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function islandora_simple_map_theme() {
  return array(
    'islandora_simple_map' => array(
      'variables' => array(
        'coords' => NULL,
        'iframe_width' => NULL,
        'iframe_height' => NULL,
        'zoom' => NULL,
        'collapsed' => NULL,
      ),
      'path' => drupal_get_path('module', 'islandora_simple_map') . '/theme',
      'template' => 'islandora_simple_map',
    ),
  );
}

/**
 * Access check for admin page of collections displaying maps.
 *
 * @return bool
 *   Does user have privilege and are collections enabled.
 */
function islandora_simple_map_collection_admin_access() {
  return (user_access('administer site configuration') &&
    _islandora_simple_map_collection_map_enabled());
}

/**
 * Access check for collection map tab.
 *
 * @param \AbstractObject $object
 *   The object being viewed.
 *
 * @return bool
 *   Does user have privilege to see/access the tab.
 */
function islandora_simple_map_collection_tab_access(AbstractObject $object) {
  return (islandora_user_access($object, array(ISLANDORA_VIEW_OBJECTS)) &&
    _islandora_simple_map_collection_map_enabled() &&
    _islandora_simple_map_display_collection_map($object->id));
}

/**
 * Implements hook_islandora_view_object_alter().
 */
function islandora_simple_map_islandora_view_object_alter(&$object, &$rendered) {
  if (in_array('islandora:compoundCModel', $object->models) &&
    variable_get('islandora_simple_map_omit_compound_display', TRUE)) {
    return array();
  }
  $found_coords = islandora_simple_map_process_coordinates($object);
  if (isset($found_coords['coordinates']) && count($found_coords['coordinates']) > 0) {
    $width = (int) variable_get('islandora_simple_map_iframe_width', '600');
    $height = (int) variable_get('islandora_simple_map_iframe_height', '600');
    $zoom = (int) variable_get('islandora_simple_map_zoom', '10');
    $collapsed = variable_get('islandora_simple_map_collapsed', 'collapsed');
    if (variable_get('islandora_simple_map_use_gmaps_api', FALSE)) {
      if (variable_get('islandora_simple_map_disable_page_display', FALSE)) {
        return array();
      }
      $map_div_id = drupal_html_id('islandora_simple_map_page');
      $settings['islandora_simple_map'][$map_div_id] = array(
        'map_markers' => $found_coords,
        'map_div_id' => $map_div_id,
        'map_zoom_level' => $zoom,
        'disable_scroll_zoom' => (bool) variable_get('islandora_simple_map_disable_scroll', FALSE),
      );
      $content = array(
        'islandora_simple_map' => array(
          '#type' => 'fieldset',
          '#title' => t('Map'),
          '#weight' => 100,
          '#attributes' => array(
            'class' => array('collapsible', ($collapsed ? 'collapsed' : '')),
          ),
          'islandora_simple_map_div' => array(
            '#type' => 'container',
            '#attributes' => array(
              'id' => $map_div_id,
              'class' => array('islandora-simple-map-holder', 'islandora-simple-map-page'),
            ),
          ),
          '#attached' => _islandora_simple_map_generate_js_code($settings),
        ),
      );
      $content['islandora_simple_map']['#attached']['css'][] = array(
        'type' => 'inline',
        'data' => "#{$map_div_id} {\nheight: {$height}px;\nwidth: {$width}px;\n}",
      );
    }
    else {

      $width = variable_get('islandora_simple_map_iframe_width', '600');
      $height = variable_get('islandora_simple_map_iframe_height', '600');
      $zoom = variable_get('islandora_simple_map_zoom', '10');
      $collapsed = variable_get('islandora_simple_map_collapsed', 'collapsed');
      $markup = theme('islandora_simple_map', array(
        // We use the first set of coords if our XPaths found more than one.
        'coords' => urlencode($found_coords['coordinates'][0]),
        'iframe_width' => $width,
        'iframe_height' => $height,
        'zoom' => $zoom,
        'collapsed' => $collapsed,
      ));
    }
    // Some Islandora render arrays have a single member, with a key of NULL.
    if (isset($rendered[NULL])) {
      if (isset($rendered[NULL]['#markup'])) {
        if (isset($content) && !isset($markup)) {
          // Don't render unless/until we need to.
          $markup = render($content);
        }
        $rendered[NULL]['#markup'] = $rendered[NULL]['#markup'] . $markup;
      }
      elseif (is_array($rendered[NULL])) {
        $rendered[NULL]['islandora_simple_map'] = $content['islandora_simple_map'];
      }
    }
    else {
      // Others have several members, depending on the content model.
      $member = islandora_simple_map_get_rendered_member($object->models);
      if (isset($rendered[$member]['#markup'])) {
        if (isset($content) && !isset($markup)) {
          // Don't render unless/until we need to.
          $markup = render($content);
        }
        $rendered[$member]['#markup'] = $rendered[$member]['#markup'] . $markup;
      }
      elseif (isset($rendered[$member]) && is_array($rendered[$member])) {
        // These are render arrays.
        if (isset($content)) {
          // We have a render array to add it to the bottom.
          $rendered[$member]['islandora_simple_map'] = $content['islandora_simple_map'];
        }
        else {
          // Add JS needed and make a markup render array element.
          drupal_add_js('misc/form.js');
          drupal_add_js('misc/collapse.js');
          $rendered[$member]['islandora_simple_map'] = array(
            '#type' => 'markup',
            '#markup' => $markup,
            '#weight' => 100,
          );
        }
      }
    }

  }
}

/**
 * Determines which member of the object's render array to append map to.
 *
 * @param array $models
 *   The object's content models.
 *
 * @return string
 *   The key identifiying the member in the render array.
 */
function islandora_simple_map_get_rendered_member(array $models) {
  // Use the first content model. We don't need to worry about basic and
  // large images, PDFs, and several other content types. We only need to
  // identify content models that do not have a render array that uses a
  // NULL key for the markup.
  $model = $models[0];
  switch ($model) {
    case 'islandora:bookCModel':
      $member = 'islandora_book';
      break;

    case 'islandora:newspaperCModel':
      $member = 'islandora_newspaper';
      break;

    case 'islandora:collectionCModel':
      $member = 'collection_view';
      break;

    case 'ir:thesisCModel':
    case 'ir:citationCModel':
      $member = 'citation.tab';
      break;

    default:
      $member = '';
  }
  return $member;
}

/**
 * Implements hook_islandora_basic_collection_build_manage_object().
 *
 * Display a form on the Collection tab of Manage object of collections.
 */
function islandora_simple_map_islandora_basic_collection_build_manage_object(array $form_state, AbstractObject $object) {
  module_load_include('inc', 'islandora_simple_map', 'includes/manage_collection_form');
  $form_state['manage_collection_object']['manage_islandora_simple_maps'] = array(
    '#id' => 'manage-islandora-simple-maps',
    '#group' => 'manage_collection_object',
    '#access' => (islandora_user_access($object, array(ISLANDORA_METADATA_EDIT))
      && _islandora_simple_map_collection_map_enabled()),
    '#type' => 'fieldset',
    '#title' => t('Manage Islandora Simple Maps'),
    'form' => drupal_get_form('islandora_simple_map_collection_manage_form', $object),
  );
  return $form_state;
}

/**
 * Generate a map of points from the members of this collection.
 *
 * @param \AbstractObject $object
 *   The collection object.
 *
 * @return array
 *   Render array to display.
 */
function islandora_simple_map_collection_map_view(AbstractObject $object) {
  $coordinates = _islandora_simple_map_get_collection_points($object);
  if (count($coordinates) > 0) {
    $zoom = (int) variable_get('islandora_simple_map_zoom', '10');
    $map_div_id = drupal_html_id('islandora_simple_map_collection_page');
    $settings['islandora_simple_map'][$map_div_id] = array(
      'map_markers' => $coordinates,
      'map_div_id' => $map_div_id,
      'map_zoom_level' => $zoom,
      'disable_scroll_zoom' => FALSE,
    );
    $content = array(
      'islandora_simple_map' => array(
        'islandora_simple_map_div' => array(
          '#type' => 'container',
          '#attributes' => array(
            'id' => $map_div_id,
            'class' => array('islandora-simple-map-holder', 'islandora-simple-map-collection-page'),
          ),
          '#attached' => _islandora_simple_map_generate_js_code($settings),
        ),
      ),
    );
  }
  else {
    $content = array(
      'islandora_simple_map' => array(
        'islandora_simple_map_div' => array(
          '#type' => 'markup',
          '#markup' => 'Collection has no points to display',
          '#prefix' => '<div>',
          '#suffix' => '</div>',
        ),
      ),
    );
  }
  return $content;
}

/**
 * Return information for marker infowindow in json.
 *
 * @param \AbstractObject $object
 *   The object being asked about.
 *
 * @return string
 *   Json encoded information.
 */
function _islandora_simple_map_marker_info(AbstractObject $object) {
  $pid = $object->id;
  $output = array(
    'pid' => check_plain($object->id),
    'label' => check_plain($object->label),
    'uri' => url("islandora/object/{$pid}"),
  );

  if (isset($object['TN']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['TN'])) {
    $output['thumbnail_uri'] = url("islandora/object/{$pid}/datastream/TN/view");
  }
  drupal_json_output($output);
}
