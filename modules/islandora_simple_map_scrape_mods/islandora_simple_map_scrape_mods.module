<?php
/**
 * @file
 * General hooks.
 */

const SCRAPE_MODS_XPATHS = "//mods:subject/mods:cartographics/mods:coordinates\r\n//mods:subject/mods:geographic";
const SCRAPE_MODS_KML_XPATHS = "//mods:subject/mods:cartographics/mods:cartographicExtension/*[local-name() = 'kml']";
const SCRAPE_MODS_COORDS_REGEX = '/^[+\-]?\d+\.\d+,\s*[+\-]?\d+\.\d+?/';

/**
 * Implements hook_menu().
 */
function islandora_simple_map_scrape_mods_menu() {
  $items = array();
  $items['admin/islandora/tools/islandora_simple_map/scrape_mods'] = array(
    'title' => 'MODS scraping',
    'description' => 'Configure the MODS scraping settings.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_simple_map_scrape_mods_admin_settings_form'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/admin_form.inc',
    'weight' => 10,
  );

  $items['islandora/object/%islandora_object/datastream/%islandora_datastream/islandora_simple_map_scrape_mods_kml'] = array(
    'title' => 'Scrape MODS KML',
    'page callback' => '_islandora_simple_map_scrape_mods_kml',
    'page arguments' => array(4, 6),
    'access callback' => '_islandora_simple_map_scrape_mods_kml_access_callback',
    'access arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/scrape_kml.inc',
  );

  return $items;
}

/**
 * Access callback for the KML scrape callback.
 */
function _islandora_simple_map_scrape_mods_kml_access_callback($datastream) {
  return $datastream->id == 'MODS' && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $datastream);
}

/**
 * Implements hook_islandora_simple_map_get_geojson().
 */
function islandora_simple_map_scrape_mods_islandora_simple_map_get_geojson(AbstractObject $object) {
  module_load_include('inc', 'islandora_simple_map_scrape_mods', 'includes/utilities');
  $xpaths = _scrape_mods_parse_paths(variable_get('islandora_simple_map_scrape_mods_xpaths', SCRAPE_MODS_XPATHS));

  $get_value = function (DOMNode $node) {
    return trim($node->nodeValue);
  };
  $coords = array_map($get_value, _scrape_mods_scrape($object, $xpaths));
  $coords = array_filter($coords);

  // Match two optionally-signed comma-separated floating-point numbers.
  $good_coords = preg_grep(SCRAPE_MODS_COORDS_REGEX, $coords);
  $cleanup = variable_get('islandora_simple_map_scrape_mods_attempt_cleanup', FALSE);
  $search = variable_get('islandora_simple_map_scrape_mods_fallback_to_search', FALSE);

  $bad_coords = ($cleanup || $search) ?
    drupal_map_assoc(array_diff($coords, $good_coords)) :
    FALSE;

  if ($bad_coords && $cleanup) {
    $replaced = str_replace(';', ',', $bad_coords);
    $now_good = preg_grep(SCRAPE_MODS_COORDS_REGEX, $replaced);
    $bad_coords = array_diff_key($bad_coords, $now_good);
    $good_coords = array_merge($good_coords, $now_good);
  }

  $to_return = array_map(function ($coord) {
    return array(
      'type' => 'Feature',
      'geometry' => array(
        'type' => 'Point',
        'coordinates' => array_reverse(array_map('doubleval', array_map('trim', explode(',', $coord)))),
      ),
    );
  }, $good_coords);

  if ($bad_coords && $search) {
    module_load_include('inc', 'islandora_simple_map_scrape_mods', 'includes/places');
    $searched = scrape_mods_search_fallback($bad_coords);
    if ($searched) {
      $to_return = array_merge($to_return, array_values($searched));
    }
  }

  return $to_return;
}

/**
 * Implements hook_islandora_simple_map_get_kml().
 */
function islandora_simple_map_scrape_mods_islandora_simple_map_get_kml(AbstractObject $object) {
  module_load_include('inc', 'islandora_simple_map_scrape_mods', 'includes/utilities');
  $xpaths = _scrape_mods_parse_paths(variable_get('islandora_simple_map_scrape_mods_kml_xpaths', SCRAPE_MODS_KML_XPATHS));

  $get_value = function (DOMNode $node, $pos) use ($object) {
    return url("islandora/object/{$object->id}/datastream/MODS/islandora_simple_map_scrape_mods_kml/$pos/loc.kml", array(
      'absolute' => TRUE,
    ));
  };
  $kml = array();
  foreach (_scrape_mods_scrape($object, $xpaths) as $pos => $node) {
    $kml[] = $get_value($node, $pos);
  }
  return $kml;
}
